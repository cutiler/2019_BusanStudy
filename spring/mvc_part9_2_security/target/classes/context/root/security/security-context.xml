<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
		
		<bean id="customLoginSuccess" class="net.koreate.security.security.CustomLoginSuccessHandler" />
		
<!-- 		
		PasswordEncoder 인터페이스를 구현한 암호화 객체 
		패스워드에 암호화 진행을 하지 않는 구현객체
		<bean id="noopPasswordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder" />
		
		별도 설정이 없을시 sha-256 방시으로 암호화 
		<bean id="standardPasswordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

-->
  
		<!-- bcrypt 해쉬 알고리즘으로 패스워드 암호화 --> 
		<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
 
 <!-- 
 		<bean id="customNoopPasswordEncoder" class="net.koreate.security.security.CustomNoopPasswordEncoder"/>
		 -->


	<!-- login logout http-config  -->
	<!-- use-expressions="false"  -->
	<!-- auto-config="true" -->
	<security:http use-expressions="true">
		<security:intercept-url pattern="/test/all" access="permitAll"/>
		<security:intercept-url pattern="/test/memberShip" access="hasAnyRole('ROLE_MEMBERSHIP','ROLE_MASTER')"/>	
		<security:intercept-url pattern="/test/master" access="hasRole('ROLE_MASTER')"/>	
		<!-- csrt token 사용안함 -->
		<!-- <security:csrf disabled="true"/> -->
		
		<security:form-login login-page="/login" authentication-success-handler-ref="customLoginSuccess" />
		
		<security:access-denied-handler error-page="/errorForbidden"/>
		<security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder ref="bcryptPasswordEncoder" />
			<security:user-service>
				<security:user name="member" password="member" authorities="ROLE_MEMBERSHIP"/>				
				<security:user name="master" password="master" authorities="ROLE_MASTER"/>
				<!-- <security:user name="master" password="{noop}master" authorities="ROLE_MASTER,ROLE_MEMBERSHIP"/> -->
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
